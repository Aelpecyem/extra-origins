plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "cardinal components"
		url = "https://jitpack.io"
	}
	maven {
		name "entity reach"
		url "https://maven.jamieswhiteshirt.com/libs-release/"
	}
	maven {
		name = "fall flying lib"
		url = "https://dl.bintray.com/adriantodt/maven"
	}
	maven {
		name = "pehkui"
		url = "https://jitpack.io"
		content {
			includeGroup "com.github.Virtuoel"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.github.apace100:origins-fabric:${project.origins_version}"
	modImplementation "io.github.OnyxStudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	modImplementation "io.github.OnyxStudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"
	modImplementation "com.jamieswhiteshirt:reach-entity-attributes:${project.reach_version}"
	modImplementation "net.adriantodt.fabricmc:fallflyinglib:${project.ffl_version}"
	modApi("me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi("me.shedaniel.cloth:config-2:${project.clothconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"
	modImplementation "com.github.Virtuoel:Pehkui:${project.pehkui_commit}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from "LICENSE"
}
